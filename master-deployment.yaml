apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: locust
    version: '9'
    component: master
    role: locust-master
  name: locust-master
spec:
  replicas: 1
  selector:
    matchLabels:
      role: locust-master
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        role: locust-master
    spec:
      containers:
      - image: mudasar786/locustio:9-with-gui
        imagePullPolicy: IfNotPresent
        name: locust-master
        volumeMounts:
          - mountPath: /scripts
            name: test-scripts
        envFrom:
          - configMapRef:
              name: locust-configmap
        command: ["locust"]
        args: ["--master", '--locustfile=$(locustfile)', '-H $(target_host)', '--expect-slaves=$(no_of_slaves)', '-c $(no_of_clients)', '-r $(hatch_rate)']
        ports:
        - containerPort: '5557'
          name: locust-p1
          protocol: TCP
        - containerPort: '5558'
          name: locust-p2
          protocol: TCP
        - containerPort: '8089'
          name: locust-p3
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 5557
          initialDelaySeconds: '3'
          periodSeconds: '30'
        readinessProbe:
          tcpSocket:
            port: 5557
          initialDelaySeconds: '3'
          periodSeconds: '30'
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: '10'
      volumes:
      - name: test-scripts
        configMap:
          name: tests-configmap
